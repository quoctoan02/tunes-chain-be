.deployBranch: &deployBranch
  - production

.Tags: &tags
  - moonlab-runner
  # Đối với các dự án của Chain
  # Sử dụng: mono-runner 

.Variables: &variables
  ENV: prod # Config theo môi trường
  DOCKER_HOST: tcp://docker:2375
  DOCKER_TLS_CERTDIR: ""
  VERSION: $CI_COMMIT_SHORT_SHA
  # Tạo ECR trên AWS
  DOCKER_REGISTRY_HOST: 325314427579.dkr.ecr.ap-southeast-1.amazonaws.com
  APPLICATION: $ECR_NAME
  IMAGE_FIX: $DOCKER_REGISTRY_HOST/$APPLICATION:$ENV
  IMAGE_BACKUP: $DOCKER_REGISTRY_HOST/$APPLICATION:$ENV-$CI_COMMIT_SHORT_SHA
  SSH_USER: ubuntu
  SSH_IP: $IP_PROD
  EXPOSE_PORT: 8888
  CONTAINER_NAME: $ECR_NAME-container

build-develop:
  stage: build
  image:
    name: ductn4/ci-node-gitops
  services:
    - docker:stable-dind
  variables:
    <<: *variables
  script:
    - if [ "$ENV" == "prod" ]; then cp $VAR_FILE_PROD .env; fi
    # docker
    - DOCKER_BUILDKIT=1 docker build -t $IMAGE_FIX -f Dockerfile .
    - docker tag $IMAGE_FIX $IMAGE_BACKUP
    # Set AWS key
    - aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID
    - aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY
    - aws configure set region $AWS_DEFAULT_REGION
    # login aws ecr
    - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $DOCKER_REGISTRY_HOST/$APPLICATION
    - docker push $IMAGE_BACKUP
  environment:
    name: $CI_COMMIT_REF_NAME
  tags: *tags
  only: *deployBranch
  allow_failure: false

# Deployment API
deploy-dapp:
  stage: deploy
  image:
    name: alpine:latest
    entrypoint: [ "" ]
  variables:
    <<: *variables
  script:
    # add new line ban ei :v
    - chmod og= $SSH_KEY_PROD
    - apk update && apk add openssh-client
    - ssh -i $SSH_KEY_PROD -o StrictHostKeyChecking=no $SSH_USER@$SSH_IP "aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $DOCKER_REGISTRY_HOST/$APPLICATION"
    - ssh -i $SSH_KEY_PROD -o StrictHostKeyChecking=no $SSH_USER@$SSH_IP "docker pull $IMAGE_BACKUP"
    - ssh -i $SSH_KEY_PROD -o StrictHostKeyChecking=no $SSH_USER@$SSH_IP "docker rm -f $CONTAINER_NAME || true"
    - ssh -i $SSH_KEY_PROD -o StrictHostKeyChecking=no $SSH_USER@$SSH_IP "docker run -itd --restart always --name $CONTAINER_NAME -p $EXPOSE_PORT:8888 $IMAGE_BACKUP"

  environment:
    name: $CI_COMMIT_REF_NAME
  tags: *tags
  only: *deployBranch
  when: manual # Chạy thủ công

